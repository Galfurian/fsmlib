{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Fixed-Size Matrix Library (fsmlib)","text":"<p><code>fsmlib</code> is a lightweight, header-only C++ library for performing efficient operations on fixed-size matrices and vectors. Designed with performance and usability in mind, <code>fsmlib</code> leverages modern C++ features to enable high-performance linear algebra operations at compile time.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Fixed-size vectors and matrices with static storage.</li> <li>Compile-time dimensions for efficiency and type safety.</li> <li>Support for arithmetic operations (addition, subtraction, multiplication, division).</li> <li>Flexible templated design for custom scalar types.</li> <li>Fully header-only, with no external dependencies.</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#installation","title":"Installation","text":"<p><code>fsmlib</code> is a header-only library. Simply clone the repository and include the header files in your project:</p> <pre><code>git clone https://github.com/yourusername/fsmlib.git\n</code></pre> <p>Then include the library in your code based on your needs.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>C++17 or higher compiler.</li> <li>Basic knowledge of template programming for custom use cases.</li> </ul>"},{"location":"#library-contents","title":"Library Contents","text":"<p>The library is divided into modular headers to keep the codebase organized and provide flexibility to users. Here's an overview of the primary files:</p> <ul> <li><code>fsmlib/fsmlib.hpp</code></li> <li>Contains base utilities and foundational types used throughout the library,     such as common traits and helper functions.</li> <li><code>fsmlib/control.hpp</code></li> <li>Provides utility functions for managing and controlling matrix/vector data,     likely including error handling or bounds checking.</li> <li><code>fsmlib/io.hpp</code></li> <li>Implements input/output functionality for matrices and vectors, such as     streaming operations and formatting.</li> <li><code>fsmlib/linalg.hpp</code></li> <li>Focused on linear algebra operations, including matrix multiplications,     inversions, and possibly eigenvalue computations.</li> <li><code>fsmlib/math.hpp</code></li> <li>Implements core mathematical operations, including element-wise addition,     subtraction, and other operations between matrices, vectors, and scalars.</li> </ul>"},{"location":"#example-usage","title":"Example Usage","text":""},{"location":"#basic-vector-operations","title":"Basic Vector Operations","text":"<pre><code>#include \"fsmlib/fsmlib.hpp\"\n#include \"fsmlib/math.hpp\"\n\n#include &lt;iostream&gt;\n\nint main() {\n    fsmlib::Vector&lt;int, 3&gt; vec1 = {1, 2, 3};\n    fsmlib::Vector&lt;int, 3&gt; vec2 = {4, 5, 6};\n\n    auto result = vec1 + vec2;\n\n    for (const auto&amp; val : result) {\n        std::cout &lt;&lt; val &lt;&lt; \" \";\n    }\n    return 0;\n}\n</code></pre> <p>Output:</p> <pre><code>5 7 9\n</code></pre>"},{"location":"#basic-matrix-operations","title":"Basic Matrix Operations","text":"<pre><code>#include \"fsmlib/fsmlib.hpp\"\n#include \"fsmlib/math.hpp\"\n\n#include &lt;iostream&gt;\n\nint main() {\n    fsmlib::Matrix&lt;int, 2, 2&gt; mat1 = {{1, 2}, {3, 4}};\n    fsmlib::Matrix&lt;int, 2, 2&gt; mat2 = {{5, 6}, {7, 8}};\n\n    auto result = mat1 + mat2;\n\n    for (const auto&amp; row : result) {\n        for (const auto&amp; val : row) {\n            std::cout &lt;&lt; val &lt;&lt; \" \";\n        }\n        std::cout &lt;&lt; \"\\n\";\n    }\n    return 0;\n}\n</code></pre> <p>Output:</p> <pre><code> 6  8\n10 12\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<p>Detailed documentation and examples are available in the docs folder.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome! If you have suggestions, bug reports, or new features to propose, feel free to open an issue or submit a pull request.</p> <p>Steps to Contribute:</p> <ul> <li>Fork the repository.</li> <li>Create a new branch: <code>git checkout -b my-feature-branch</code></li> <li>Commit your changes: <code>git commit -m 'Add some feature'</code></li> <li>Push the branch: <code>git push origin my-feature-branch</code></li> <li>Open a pull request.</li> </ul>"},{"location":"#license","title":"License","text":"<p><code>fsmlib</code> is licensed under the MIT License.</p>"}]}